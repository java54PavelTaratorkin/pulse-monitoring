AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Streams DynamoDB table changes to EventBridge (uksb-1tthgi812) (tag:dynamodb-eventbridge-java)
Globals:
  Function:
    Handler: telran.pulse.monitoring.App::handleRequest
    Runtime: java17
    Architectures:
      - x86_64
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        LOGGER_LEVEL: FINE

Resources:
  # DynamoDB Streams specification
  # pulse_values DynamoDB table
  PulseValuesStream:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: pulse_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # pulse_abnormal_values DynamoDB table
  PulseAbnormalValuesStream:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: pulse_abnormal_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # pulse_last_values (No Stream Specification) DynamoDB table
  PulseLastValuesStream:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: pulse_last_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  # pulse_jump_values DynamoDB table
  PulseJumpValuesStream:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: pulse_jump_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # Abnormal pulse values notifications SNS Topic
  AbnormalValuesSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: AbnormalValuesTopic
      Subscription:
        - Protocol: email
          Endpoint: pault83dev@gmail.com

  # PulseJumpAnalyzer Lambda async function
  PulseJumpAnalyzer:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: pulse-jump-analyzer
      Policies:
        - Statement:
            - Effect: Allow
              Resource: "*"
              Action:
                - dynamodb:*
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria:
              Filters:
                - Pattern: '{"eventName": ["INSERT"]}'

  # PulseValuesAnalyzer Lambda async function
  PulseValuesAnalyzer:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: pulse-values-analyzer
      Policies:
        - Statement:
            - Effect: Allow
              Resource: "*"
              Action:
                - dynamodb:*
      Environment:
        Variables:
          SERVERLESS_REST_API_URL: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range"
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria:
              Filters:
                - Pattern: '{"eventName": ["INSERT"]}'

  # RangeProviderFunction Lambda sync function
  PulseRangeProviderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pulse-range-provider
      Events:
        RangeApiEvent:
          Type: Api
          Properties:
            Path: /range
            Method: get

  # Lambda for abnormal pulse values notification 
  AbnormalValuesNotifier:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pulse-abnormal-values-notifier
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt AbnormalValuesSNS.TopicName
      Environment:
        Variables:
          TOPIC_ARN: !Ref AbnormalValuesSNS
          REGION: !Sub ${AWS::Region}
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PulseAbnormalValuesStream.StreamArn
            FilterCriteria: 
              Filters: 
              - Pattern: '{"eventName": ["INSERT"]}'  

Outputs:
  # API Gateway endpoint URL for RangeProviderFunction
  PulseRangeProviderApi:
    Description: "API Gateway endpoint URL for PulseRangeProviderFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range/"